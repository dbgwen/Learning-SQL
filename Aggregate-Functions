
COUNT(): count the number of rows
    
      SELECT COUNT(*)
      FROM table_name;
    
SUM(): the sum of the values in a column

      SELECT SUM(column_name)
      FROM table_name;

MAX()/MIN(): the largest/smallest value

      SELECT MAX(column_name)
      FROM table_name;

AVG(): the average of the values in a column

      SELECT AVG(column_name)
      FROM table_name;

ROUND(): round the values in the column

      SELECT ROUND(column_name, 0)
      FROM table_name;
      
      SELECT ROUND(AVG((column_name), 0)
      FROM table_name; 
      
      
GROUP BY

    - GROUP BY is a clause in SQL that is used with aggregate functions
    - It is used in collaboration with the SELECT statement to arrange identical data into groups
    - The GROUP BY statement comes after any WHERE statements, but before ORDER BY or LIMIT
    
    SELECT year,
    AVG(imdb_rating)
    FROM movies
    GROUP BY year
    ORDER BY year;
    
    SQL lets us use column reference(s) in our GROUP BY that will make our lives easier.
    - 1 is the first column selected
    - 2 is the second column selected
    - 3 is the third column selected

    SELECT column_one, 
        column_two,
        AVG(column_three)
    FROM table_name
    GROUP BY 1, 2;

HAVING

    - HAVING is very similar to WHERE - for all types of WHERE clauses can be used with HAVING
    - Filter which groups to include and which to exclude
    - When we want to limit the results of a query based on values of the individual rows, use WHERE
    - When we want to limit the results of a query based on an aggregate property, use HAVING
    - HAVING statement always comes after GROUP BY, but before ORDER BY and LIMIT

        SELECT column_name,
           column_name,
           COUNT(column_name)
        FROM table_name
        GROUP BY 1, 2
        HAVING COUNT(column_name) > 10;


 Aggregate functions combine multiple rows together to form a single value of more meaningful information

    - GROUP BY is a clause used with aggregate functions to combine data from one or more columns
    - HAVING limit the results of a query based on an aggregate property


    SELECT CASE
      WHEN url LIKE '%github%' THEN 'GitHub'
      WHEN url LIKE '%medium.com%' THEN 'Medium'
      WHEN url LIKE '%nytimes.com%' THEN 'New York Times'
      ELSE 'Other'
     END AS 'Source',
     COUNT(*) 
     FROM hacker_news
     GROUP BY 1; 
